services:
  db:
    image: postgres:16-alpine
    container_name: booking-postgres
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=booking
      - POSTGRES_USER=pawsey
      - POSTGRES_PASSWORD=pawsey
    ports:
      - "5433:5432"
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    container_name: booking-redis
    ports:
      - "6380:6379"
    networks:
      - app_network
    # volumes:
    #   - redis_data:/data

  web:
    image: 586794455762.dkr.ecr.ap-southeast-2.amazonaws.com/pawsey/ec2-provisioning:1.1.0    
    build:
      context: .
      args:
        - USER_ID=${UID:-1000}
        - GROUP_ID=${GID:-1000}
    container_name: django-booking-app
    # volumes:
    #   - .:/app:delegated
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      - DB_HOST=booking-postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    # volumes:
      # - static_volume:/app/static
      # - media_volume:/app/media
      # - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    networks:
      - app_network


networks:
  app_network:

# volumes:
  # static_volume:
  # media_volume:
#   postgres_data:
#   redis_data: